@page "/nuevoAnimal"
@inject CodeChallenge.Data.ZoologicoServicio _zoologicoServicio
@inject NavigationManager NavManager

<h3>Nuevo Animal</h3>
<div class="content px-4">
    @if (isErrorActive)
    {
        <div class="alert alert-danger" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close" @onclick="HideError">
                <span aria-hidden="true">&times;</span>
            </button>
            <h3>@title</h3>
            <p>@message</p>
        </div>
    }
</div>
    <EditForm Model="@animal" OnValidSubmit="AgregarAnimal">
        <div class="form-group row justify-content-center">
            <div class="col-8">
                <div class="card">
                    <div class="card-body">
                        <div class="form-group row justify-content-center">
                            <div class="col-2">
                                <label class="col-form-label">Tipo</label>
                            </div>
                            <div class="col-4">
                                <select @bind="animal.Tipo" class="form-control">
                                    <option value="">-- Seleccionar Tipo --</option>
                                    @foreach (var tipo in Enum.GetValues(typeof(Data.Enums.AnimalType)))
                                    {
                                        <option value="@tipo">@tipo</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group row justify-content-center">
                            <div class="col-2">
                                <label class="col-form-label">Especie</label>
                            </div>
                            <div class="col-4">
                                <input type="text" class="form-control" @bind="animal.Especie" />
                            </div>
                        </div>
                        <div class="form-group row justify-content-center">
                            <div class="col-2">
                                <label class="col-form-label">Edad</label>
                            </div>
                            <div class="col-4">
                                <input type="number" class="form-control" @bind="animal.Edad" />
                            </div>
                        </div>
                        <div class="form-group row justify-content-center">
                            <div class="col-2">
                                <label class="col-form-label">Lugar de Origen</label>
                            </div>
                            <div class="col-4">
                                <input type="text" class="form-control" @bind="animal.LugarOrigen" />
                            </div>
                        </div>
                        <div class="form-group row justify-content-center">
                            <div class="col-2">
                                <label class="col-form-label">Peso</label>
                            </div>
                            <div class="col-4">
                                <input type="number" class="form-control" @bind="animal.Peso" />
                            </div>
                        </div>
                        @if (animal.Tipo != Data.Enums.AnimalType.Hervíboro)
                        {
                            <div class="form-group row justify-content-center">
                                <div class="col-2">
                                    <label class="col-form-label">Porcentaje</label>
                                </div>
                                <div class="col-4">
                                    <input type="number" class="form-control" @bind="animal.Porcentaje" />
                                </div>
                            </div>
                        }

                        @if (animal.Tipo == Data.Enums.AnimalType.Hervíboro)
                        {
                            <div class="form-group row justify-content-center">
                                <div class="col-2">
                                    <label class="col-form-label">Kilos</label>
                                </div>
                                <div class="col-4">
                                    <input type="number" class="form-control" @bind="animal.Kilos" />
                                </div>
                            </div>
                        }

                        @if (animal.Tipo == Data.Enums.AnimalType.Reptil)
                        {
                            <div class="form-group row justify-content-center">
                                <div class="col-4">
                                    <label class="col-form-label">Cambia de piel cada</label>
                                    <label class="col-form-label">(Días)</label>
                                </div>
                                <div class="col-4">
                                    <input type="number" class="form-control" @bind="animal.DiasCambioDePiel" />
                                </div>
                            </div>
                        }

                        <div class="form-group row">
                            <div class="col-12 d-flex justify-content-center">
                                <button type="button" class="btn btn-success" @onclick="AgregarAnimal">Agregar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
    @code {
        private List<CodeChallenge.Data.Enums.EnumExtensions.EnumValue> _tipos;
        protected CodeChallenge.Data.Model.Animal animal = new Data.Model.Animal();
        bool isErrorActive;
        string title;
        string message;

        private void AgregarAnimal()
        {
            try
            {
                _zoologicoServicio.AgregarAnimal(animal);
                NavManager.NavigateTo("/index");
            }
            catch (Exception ex)
            {

                ShowError("Error", ex.Message);
            }

        }

        protected override Task OnInitializedAsync()
        {
            _tipos = _zoologicoServicio.TiposAnimales;
            return base.OnInitializedAsync();
        }

        public void ShowError(string title, string message)
        {
            this.isErrorActive = true;
            this.title = title;
            this.message = message;
        }

        private void HideError()
        {
            isErrorActive = false;
        }
    }
